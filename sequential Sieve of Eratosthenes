#include <mpi.h>
#include <stdio.h>
#include <stdbool.h>
#include <string.h>

void SieveOfEratosthenes(int n)
{
   
    bool prime[n + 1];
    memset(prime, true, sizeof(prime));

    for (int p = 2; p * p <= n; p++) {

        if (prime[p] == true) {

            for (int i = p * p; i <= n; i += p)
                prime[i] = false;
        }
    }

       for (int p = 2; p <= n; p++)
              if (prime[p])
                  printf("%d ", p);
          printf("\n");
      }
      
      int main(int argc, char** argv)
      {
          int rank, size;
          int n;  
              
              scanf("%d",&n);
          
          MPI_Init(&argc, &argv);
          MPI_Comm_rank(MPI_COMM_WORLD, &rank);
          MPI_Comm_size(MPI_COMM_WORLD, &size);
      
          
          double start_time, end_time;
          start_time = MPI_Wtime();

    if (rank == 0) { 
        printf("Following are the prime numbers smaller than or equal to %d \n", n);
        SieveOfEratosthenes(n);
    }

    end_time = MPI_Wtime();

    if (rank == 0) {  
        double elapsed_time = end_time - start_time;
        printf("Execution time: %f seconds\n", elapsed_time);
    }

    MPI_Finalize();
    return 0;
}


